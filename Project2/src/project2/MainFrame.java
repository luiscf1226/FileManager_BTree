/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project2;

import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luis Carlos Flores
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jd1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        c1 = new javax.swing.JButton();
        c2 = new javax.swing.JButton();
        c3 = new javax.swing.JButton();
        c4 = new javax.swing.JButton();
        t1 = new javax.swing.JLabel();
        t2 = new javax.swing.JLabel();
        t3 = new javax.swing.JLabel();
        t4 = new javax.swing.JLabel();
        per1 = new javax.swing.JLabel();
        per2 = new javax.swing.JLabel();
        per3 = new javax.swing.JLabel();
        per4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        colapersona = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        pb1 = new javax.swing.JProgressBar();
        jLabel6 = new javax.swing.JLabel();
        jseconds = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jdr1 = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        rb3 = new javax.swing.JRadioButton();
        rb4 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jd2 = new javax.swing.JDialog();
        jPanel4 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        caj1 = new javax.swing.JLabel();
        caj2 = new javax.swing.JLabel();
        caj3 = new javax.swing.JLabel();
        caj4 = new javax.swing.JLabel();
        pcaj1 = new javax.swing.JLabel();
        pcaj2 = new javax.swing.JLabel();
        pcaj3 = new javax.swing.JLabel();
        pcaj4 = new javax.swing.JLabel();
        ppcaj1 = new javax.swing.JLabel();
        ppcaj2 = new javax.swing.JLabel();
        ppcaj3 = new javax.swing.JLabel();
        ppcaj4 = new javax.swing.JLabel();
        bcaj1 = new javax.swing.JButton();
        bcaj2 = new javax.swing.JButton();
        bcaj3 = new javax.swing.JButton();
        bcaj4 = new javax.swing.JButton();
        sper1 = new javax.swing.JLabel();
        sper2 = new javax.swing.JLabel();
        sper3 = new javax.swing.JLabel();
        sper4 = new javax.swing.JLabel();
        pper4 = new javax.swing.JLabel();
        pper3 = new javax.swing.JLabel();
        pper2 = new javax.swing.JLabel();
        pper1 = new javax.swing.JLabel();
        cper1 = new javax.swing.JButton();
        cper3 = new javax.swing.JButton();
        cper2 = new javax.swing.JButton();
        cper4 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jseconds2 = new javax.swing.JLabel();
        bar1 = new javax.swing.JProgressBar();
        bar2 = new javax.swing.JProgressBar();
        bar3 = new javax.swing.JProgressBar();
        bar4 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        spinner1 = new javax.swing.JSpinner();

        c1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        c1.setText("Cajero #1");

        c2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        c2.setText("Cajero #2");

        c3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        c3.setText("Cajero #3");

        c4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        c4.setText("Cajero #4");

        t1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        t1.setText("Persona en Cajero:");

        t2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        t2.setText("Persona en Cajero:");

        t3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        t3.setText("Persona en Cajero:");

        t4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        t4.setText("Persona en Cajero:");

        per1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        per1.setText(".......");

        per2.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        per2.setText(".......");

        per3.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        per3.setText(".......");

        per4.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        per4.setText(".......");

        jLabel14.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel14.setText("Persona Siguiente:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel13.setText("Cola de Personas");

        colapersona.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        colapersona.setText(".......");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Abrir Banco");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel6.setText("Segundos:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(t1, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(per1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jseconds, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(per2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2))
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(per3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(per4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t4))
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(colapersona, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jseconds, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(c4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(per1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(per2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(per3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(per4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colapersona, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(53, 53, 53)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pb1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout jd1Layout = new javax.swing.GroupLayout(jd1.getContentPane());
        jd1.getContentPane().setLayout(jd1Layout);
        jd1Layout.setHorizontalGroup(
            jd1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jd1Layout.setVerticalGroup(
            jd1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel8.setText("jLabel8");

        buttonGroup1.add(rb1);
        rb1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb1.setText("Cajero#1");

        buttonGroup1.add(rb2);
        rb2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb2.setText("Cajero#2");

        buttonGroup1.add(rb3);
        rb3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb3.setText("Cajero#3");

        buttonGroup1.add(rb4);
        rb4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rb4.setText("Cajero#4");

        jLabel4.setFont(new java.awt.Font("Verdana", 3, 18)); // NOI18N
        jLabel4.setText("Escoja Registro de Cajero");

        ta1.setColumns(20);
        ta1.setRows(5);
        jScrollPane1.setViewportView(ta1);

        jButton4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        jButton4.setText("Mostrar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rb1)
                            .addComponent(rb4)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(98, 98, 98)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rb2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(rb3, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(249, 249, 249))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(178, 178, 178))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(325, 325, 325))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(rb1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(rb2)
                        .addGap(25, 25, 25)
                        .addComponent(rb3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addComponent(rb4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout jdr1Layout = new javax.swing.GroupLayout(jdr1.getContentPane());
        jdr1.getContentPane().setLayout(jdr1Layout);
        jdr1Layout.setHorizontalGroup(
            jdr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdr1Layout.setVerticalGroup(
            jdr1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel5.setText("jLabel5");

        jButton5.setText("Abrir Banco");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        caj1.setText("Cajero #1");

        caj2.setText("Cajero #2");

        caj3.setText("Cajero #3");

        caj4.setText("Cajero #4");

        pcaj1.setText("Persona en Cajero:");

        pcaj2.setText("Persona en Cajero:");

        pcaj3.setText("Persona en Cajero:");

        pcaj4.setText("Persona en Cajero:");

        ppcaj1.setText("......");

        ppcaj2.setText(".......");

        ppcaj3.setText(".........");

        ppcaj4.setText(".........");

        sper1.setText(" Siguiente En Cola:");

        sper2.setText("Siguiente En Cola:");

        sper3.setText("Siguiente en Cola:");

        sper4.setText("Siguiente en Cola:");

        pper4.setText(".........");

        pper3.setText(".........");

        pper2.setText(".......");

        pper1.setText("......");

        cper1.setText("jButton10");

        cper3.setText("jButton10");

        cper2.setText("jButton10");

        cper4.setText("jButton10");

        jLabel30.setText("Segundos:");

        jseconds2.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(caj1)
                            .addComponent(bcaj1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jseconds2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel30)))
                        .addGap(86, 86, 86)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(caj2)
                            .addComponent(bcaj2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pper1)
                            .addComponent(ppcaj1))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(pcaj1)
                                .addGap(60, 60, 60)
                                .addComponent(pcaj2))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(sper1)
                                    .addComponent(bar1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(60, 60, 60)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bar2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ppcaj2)
                                            .addComponent(cper2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pper2)
                                            .addComponent(sper2))))
                                .addGap(17, 17, 17)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pper3)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(sper3)
                                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cper3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(bar3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(94, 94, 94)
                                        .addComponent(cper4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(caj3)
                                        .addGap(123, 123, 123)
                                        .addComponent(caj4))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(bcaj3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(111, 111, 111)
                                        .addComponent(bcaj4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pcaj3)
                                            .addComponent(ppcaj3))
                                        .addGap(70, 70, 70)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ppcaj4)
                                            .addComponent(pcaj4)
                                            .addComponent(pper4)
                                            .addComponent(sper4)
                                            .addComponent(bar4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(249, 249, 249)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(cper1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(89, 89, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jseconds2)))
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caj2)
                    .addComponent(caj3)
                    .addComponent(caj4)
                    .addComponent(caj1))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bcaj1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bcaj2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bcaj4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bcaj3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pcaj4)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pcaj2)
                        .addComponent(pcaj1))
                    .addComponent(pcaj3))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ppcaj1)
                    .addComponent(ppcaj2)
                    .addComponent(ppcaj3)
                    .addComponent(ppcaj4))
                .addGap(97, 97, 97)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pper1)
                    .addComponent(pper2)
                    .addComponent(pper3)
                    .addComponent(pper4))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sper1)
                    .addComponent(sper2)
                    .addComponent(sper3)
                    .addComponent(sper4))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cper1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cper2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cper3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cper4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bar1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bar2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bar3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bar4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jd2Layout = new javax.swing.GroupLayout(jd2.getContentPane());
        jd2.getContentPane().setLayout(jd2Layout);
        jd2Layout.setHorizontalGroup(
            jd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jd2Layout.setVerticalGroup(
            jd2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Matura MT Script Capitals", 3, 24)); // NOI18N
        jLabel1.setText("Bienvenido al Banco");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Escoja un Numero De Cajeros 1-4: ");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("1. Una Cola por Banco");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("2. Una Cola Por Cajero");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Escoja Opcion de Cola");

        spinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 4, 1));
        spinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinner1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(spinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int num=(int)spinner1.getValue();
       
        if(num==1){
            c2.setVisible(false);
            c3.setVisible(false);
            c4.setVisible(false);
            t2.setVisible(false);
            t3.setVisible(false);
            t4.setVisible(false);
            per2.setVisible(false);
            per3.setVisible(false);
            per4.setVisible(false);
        }
       if(num==2){
            c2.setVisible(true);
            c3.setVisible(false);
            c4.setVisible(false);
            t2.setVisible(true);
            t3.setVisible(false);
            t4.setVisible(false);
            per2.setVisible(true);
            per3.setVisible(false);
            per4.setVisible(false);
        }
        if(num==3){
           
            c2.setVisible(true);
            c3.setVisible(true);
            c4.setVisible(false);
            t2.setVisible(true);
            t3.setVisible(true);
            t4.setVisible(false);
            per2.setVisible(true);
            per3.setVisible(true);
            per4.setVisible(false);
        }
        if(num==4){
            c2.setVisible(true);
            c3.setVisible(true);
            c4.setVisible(true);
            t2.setVisible(true);
            t3.setVisible(true);
            t4.setVisible(true);
            per2.setVisible(true);
            per3.setVisible(true);
            per4.setVisible(true);
        }
        jd1.setModal(true); //no poder tocar a principal
        jd1.pack();//tamaño se acople a los controles preestablecidos
        jd1.setLocationRelativeTo(this);//centro de la principal
        jd1.setVisible(true);
       
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void spinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinner1StateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_spinner1StateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Cajero c1= new Cajero();
        
        listaca.add(c1);
        
        Cola cola1=new Cola();
        Pila pila1=new Pila();
        int spin=(int)spinner1.getValue();
        if(spin==1){
            for(int i=1;i<=65;i++){
                String name="Persona"+i;
                Random r= new Random();
                int t=r.nextInt(3)+1;
                String tra="";
                if(t==1){
                    tra="Retiro";
                }
                if(t==2){
                    tra="Pago";
                }
                if(t==3){
                    tra="Transferencia";
                }
                Persona p=new Persona();
                p.setTransaccion(tra);
                p.setNombre(name);
                cola1.Pone(p);
            }
            int cc=65;
            int conts=0;
            int cont2=1;
            
            System.out.println("COLA 1 SIZE: "+cola1.getLista().size());
            cola1.imprime();
            while(cola1.getLista().size()!=0){
                c1.setP(pila1);
                pb1.setMaximum(cc);
                Persona e1=new Persona();
                e1=cola1.agarrarPersona(0);
                
                c1.setVacio(true);
                if(c1.isVacio()==true){
                        c1.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            c1.setPersona(cola1.getLista().get(0));
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            per1.setText(cola1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;
                            if(cola1.getLista().size()!=0)
                            cola1.Quita();
                            String pass=c1.getPersona().getNombre()+" , Accion: "+c1.getPersona().getTransaccion()+" Tardanza: "+rr;
                            c1.setTipo(pass+"\n");
                            pila1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            c1.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                            // colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                        
                }       
            }
            System.out.println("PILA 1 SIZE: "+pila1.getLista().size());
            pila1.imprime();
            
            //pila1.imprime();
            jdr1.setModal(true); //no poder tocar a principal
            jdr1.pack();//tamaño se acople a los controles preestablecidos
            jdr1.setLocationRelativeTo(this);//centro de la principal
            jdr1.setVisible(true);
            listaca.remove(0);
            pb1.setValue(0);
       
        }//un cajero
        if(spin==2){
            pb1.setMaximum(65);
            pb1.setValue(65);
            listaca.removeAll(listaca);
            Cajero ca1=new Cajero();
            listaca.add(ca1);
            Cajero ca2=new Cajero();
            listaca.add(ca2);
            Pila p1=new Pila();
            Pila p2=new Pila();
            for(int i=1;i<=65;i++){
                String name="Persona"+i;
                Random r= new Random();
                int t=r.nextInt(3)+1;
                String tra="";
                if(t==1){
                    tra="Retiro";
                }
                if(t==2){
                    tra="Pago";
                }
                if(t==3){
                    tra="Transferencia";
                }
                Persona p=new Persona();
                p.setTransaccion(tra);
                p.setNombre(name);
                cola1.Pone(p);
            }
            int cc=65;
            jseconds.setText("0");
            int conts=0;
            System.out.println("COLA 1 SIZE: "+cola1.getLista().size());
            cola1.imprime();
            
            while(cola1.getLista().size()!=0){
                
                ca1.setP(p1);
                ca2.setP(p2);
                ca1.setVacio(true);
                ca2.setVacio(true);
                if(ca1.isVacio()==true&&ca2.isVacio()==true){
                    Random r2= new Random();
                    int rr2=r2.nextInt(2)+1;
                    if(rr2==1){
                       ca1.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca1.setPersona(cola1.getLista().get(0));
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            per1.setText(cola1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;
                            if(cola1.getLista().size()!=0)
                            cola1.Quita();
                            String pass=ca1.getPersona().getNombre()+" , Accion: "+ca1.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca1.setVacio(true);
                            System.out.println(cola1.getLista().size());
                            //System.out.println("Control : "+cc);
                            pb1.setValue(cc);
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                   
                    if(rr2==2){
                        ca2.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca2.setPersona(cola1.getLista().get(0));
                            per2.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca2.getPersona().getNombre()+" , Accion: "+ca2.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca2.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                    
                }
                if(ca1.isVacio()==true){
                        ca1.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca1.setPersona(cola1.getLista().get(0));
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            per1.setText(cola1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;
                            if(cola1.getLista().size()!=0)
                            cola1.Quita();
                            String pass=ca1.getPersona().getNombre()+" , Accion: "+ca1.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca1.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                            // colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                        
                }
               
                if(ca2.isVacio()==true){
                        ca2.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca2.setPersona(cola1.getLista().get(0));
                            per2.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca2.getPersona().getNombre()+" , Accion: "+ca2.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca2.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                        
                }
                
                
            }
            System.out.println("Pila 1 SIZE: "+p1.getLista().size());
            p1.imprime();
            System.out.println("Pila 2 SIZE: "+p2.getLista().size());
            p2.imprime();
            System.out.println("cajero 1");
            ca1.getP().imprime();
            System.out.println("cajero 2");
            ca2.getP().imprime();
            System.out.println("tam lista cajero"+listaca.size());
            jdr1.setModal(true); //no poder tocar a principal
            jdr1.pack();//tamaño se acople a los controles preestablecidos
            jdr1.setLocationRelativeTo(this);//centro de la principal
            jdr1.setVisible(true);
            listaca.removeAll(listaca);
           
        }//cajeros2
        if(spin==3){
            pb1.setMaximum(65);
            pb1.setValue(65);
            listaca.removeAll(listaca);
            Cajero ca1=new Cajero();
            listaca.add(ca1);
            Cajero ca2=new Cajero();
            listaca.add(ca2);
            Cajero ca3=new Cajero();
            listaca.add(ca3);
            Pila p1=new Pila();
            Pila p2=new Pila();
            Pila p3=new Pila();
            for(int i=1;i<=65;i++){
                String name="Persona"+i;
                Random r= new Random();
                int t=r.nextInt(3)+1;
                String tra="";
                if(t==1){
                    tra="Retiro";
                }
                if(t==2){
                    tra="Pago";
                }
                if(t==3){
                    tra="Transferencia";
                }
                Persona p=new Persona();
                p.setTransaccion(tra);
                p.setNombre(name);
                cola1.Pone(p);
            }
            int cc=65;
            int conts=0;
            jseconds.setText("0");
            System.out.println("COLA 1: size: "+cola1.getLista().size());
            cola1.imprime();
            while(cola1.getLista().size()!=0){
                ca1.setP(p1);
                ca2.setP(p2);
                ca3.setP(p3);
                ca1.setVacio(true);
                ca2.setVacio(true);
                ca3.setVacio(true);
                if(ca1.isVacio()==true&&ca2.isVacio()==true&&ca3.isVacio()==true){
                    Random r2= new Random();
                    int rr2=r2.nextInt(3)+1;
                    if(rr2==1){
                       ca1.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca1.setPersona(cola1.getLista().get(0));
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            per1.setText(cola1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;
                            if(cola1.getLista().size()!=0)
                            cola1.Quita();
                            String pass=ca1.getPersona().getNombre()+" , Accion: "+ca1.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca1.setVacio(true);
                            System.out.println(cola1.getLista().size());
                            //System.out.println("Control : "+cc);
                            pb1.setValue(cc);
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                   
                    if(rr2==2){
                        ca2.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca2.setPersona(cola1.getLista().get(0));
                            per2.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca2.getPersona().getNombre()+" , Accion: "+ca2.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca2.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                    if(rr2==3){
                        ca3.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca3.setPersona(cola1.getLista().get(0));
                            per3.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca3.getPersona().getNombre()+" , Accion: "+ca3.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca3.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                    
                }//else 
                if(ca1.isVacio()==true){
                        ca1.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca1.setPersona(cola1.getLista().get(0));
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            per1.setText(cola1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;
                            if(cola1.getLista().size()!=0)
                            cola1.Quita();
                            String pass=ca1.getPersona().getNombre()+" , Accion: "+ca1.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca1.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                            // colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                        
                }
               
                if(ca2.isVacio()==true){
                        ca2.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca2.setPersona(cola1.getLista().get(0));
                            per2.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca2.getPersona().getNombre()+" , Accion: "+ca2.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca2.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                        
                }
                if(ca3.isVacio()==true){
                    ca3.setVacio(false);
                    if(cola1.getLista().size()!=0){
                            ca3.setPersona(cola1.getLista().get(0));
                            per3.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca3.getPersona().getNombre()+" , Accion: "+ca3.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca3.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                }
                
            }//fin
            System.out.println("Pila 1 SIZE: "+p1.getLista().size());
            p1.imprime();
            System.out.println("Pila 2 SIZE: "+p2.getLista().size());
            p2.imprime();
            System.out.println("Pila 3 SIZE: "+p3.getLista().size());
            p3.imprime();
            System.out.println("cajero 1");
            ca1.getP().imprime();
            System.out.println("cajero 2");
            ca2.getP().imprime();
            System.out.println("cajero 3");
            ca3.getP().imprime();
            System.out.println("tam lista cajero"+listaca.size());
            jdr1.setModal(true); //no poder tocar a principal
            jdr1.pack();//tamaño se acople a los controles preestablecidos
            jdr1.setLocationRelativeTo(this);//centro de la principal
            jdr1.setVisible(true);
            listaca.removeAll(listaca);
            
        }//cajeros 3
        if(spin==4){
            pb1.setMaximum(65);
            pb1.setValue(65);
            listaca.removeAll(listaca);
            Cajero ca1=new Cajero();
            listaca.add(ca1);
            Cajero ca2=new Cajero();
            listaca.add(ca2);
            Cajero ca3=new Cajero();
            listaca.add(ca3);
            Cajero ca4=new Cajero();
            listaca.add(ca4);
            Pila p1=new Pila();
            Pila p2=new Pila();
            Pila p3=new Pila();
            Pila p4=new Pila();
            for(int i=1;i<=65;i++){
                String name="Persona"+i;
                Random r= new Random();
                int t=r.nextInt(3)+1;
                String tra="";
                if(t==1){
                    tra="Retiro";
                }
                if(t==2){
                    tra="Pago";
                }
                if(t==3){
                    tra="Transferencia";
                }
                Persona p=new Persona();
                p.setTransaccion(tra);
                p.setNombre(name);
                cola1.Pone(p);
            }
            int cc=65;
            int conts=0;
            jseconds.setText("0");
            System.out.println("COLA 1 size: "+cola1.getLista().size());
            while(cola1.getLista().size()!=0){
                ca1.setP(p1);
                ca2.setP(p2);
                ca3.setP(p3);
                ca4.setP(p4);
                ca1.setVacio(true);
                ca2.setVacio(true);
                ca3.setVacio(true);
                ca4.setVacio(true);
                if(ca1.isVacio()==true&&ca2.isVacio()==true&&ca3.isVacio()==true&&ca4.isVacio()==true){
                    Random r2= new Random();
                    int rr2=r2.nextInt(3)+1;
                    if(rr2==1){
                       ca1.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca1.setPersona(cola1.getLista().get(0));
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            per1.setText(cola1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;
                            if(cola1.getLista().size()!=0)
                            cola1.Quita();
                            String pass=ca1.getPersona().getNombre()+" , Accion: "+ca1.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca1.setVacio(true);
                            System.out.println(cola1.getLista().size());
                            //System.out.println("Control : "+cc);
                            pb1.setValue(cc);
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                   
                    if(rr2==2){
                        ca2.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca2.setPersona(cola1.getLista().get(0));
                            per2.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca2.getPersona().getNombre()+" , Accion: "+ca2.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca2.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                    if(rr2==3){
                        ca3.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca3.setPersona(cola1.getLista().get(0));
                            per3.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca3.getPersona().getNombre()+" , Accion: "+ca3.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca3.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                    if(rr2==4){
                        ca4.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca4.setPersona(cola1.getLista().get(0));
                            per4.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca4.getPersona().getNombre()+" , Accion: "+ca4.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca4.setTipo(pass+"\n");
                            p4.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca4.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                    }
                    
                }//else 
                if(ca1.isVacio()==true){
                        ca1.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca1.setPersona(cola1.getLista().get(0));
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            per1.setText(cola1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;
                            if(cola1.getLista().size()!=0)
                            cola1.Quita();
                            String pass=ca1.getPersona().getNombre()+" , Accion: "+ca1.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca1.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                            // colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                        
                }
               
                if(ca2.isVacio()==true){
                        ca2.setVacio(false);
                        if(cola1.getLista().size()!=0){
                            ca2.setPersona(cola1.getLista().get(0));
                            per2.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca2.getPersona().getNombre()+" , Accion: "+ca2.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca2.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                        
                }
                if(ca3.isVacio()==true){
                    ca3.setVacio(false);
                    if(cola1.getLista().size()!=0){
                            ca3.setPersona(cola1.getLista().get(0));
                            per3.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca3.getPersona().getNombre()+" , Accion: "+ca3.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca3.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                }
                if(ca4.isVacio()==true){
                    ca4.setVacio(false);
                    if(cola1.getLista().size()!=0){
                            ca4.setPersona(cola1.getLista().get(0));
                            per4.setText(cola1.getLista().get(0).getNombre());
                            Random r= new Random();
                            int rr=r.nextInt(3)+1;
                            conts+=rr;
                            jseconds.setText(conts+"");
                            try {
                                Thread.sleep(rr+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            cc--;

                            cola1.Quita();
                            String pass=ca4.getPersona().getNombre()+" , Accion: "+ca4.getPersona().getTransaccion()+" Tardanza: "+rr;
                            ca4.setTipo(pass+"\n");
                            p4.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd1, "CAJERO VACIO SIGUIENTE PERSONA");
                            ca4.setVacio(true);
                             System.out.println(cola1.getLista().size());
                             pb1.setValue(cc);
                             //colapersona.setText(cola1.getLista().get(0).getNombre());
                            //System.out.println("Control : "+cc);
                        }
                        if(cola1.getLista().size()>1){
                            colapersona.setText(cola1.getLista().get(1).getNombre());
                        }
                }
            }//else
            System.out.println("Pila 1 SIZE: "+p1.getLista().size());
            p1.imprime();
            System.out.println("Pila 2 SIZE: "+p2.getLista().size());
            p2.imprime();
            System.out.println("Pila 3 SIZE: "+p3.getLista().size());
            p3.imprime();
            System.out.println("Pila 4 SIZE: "+p4.getLista().size());
            p4.imprime();
            System.out.println("cajero 1");
            ca1.getP().imprime();
            System.out.println("cajero 2");
            ca2.getP().imprime();
            System.out.println("cajero 3");
            ca3.getP().imprime();
            System.out.println("cajero 4");
            ca4.getP().imprime();
            System.out.println("tam lista cajero"+listaca.size());
            jdr1.setModal(true); //no poder tocar a principal
            jdr1.pack();//tamaño se acople a los controles preestablecidos
            jdr1.setLocationRelativeTo(this);//centro de la principal
            jdr1.setVisible(true);
            listaca.removeAll(listaca);
        }//fin
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //System.out.println("tam lista cajero"+listaca.size());
        if(rb1.isSelected()){
            ta1.setText("");
            //ta1.setText("CAJERO #1 REGISTRO: "+"\n");
            Cajero ca1=listaca.get(0);
            Pila pa1=ca1.getP();
            //pa1.imprime();
            
            ta1.append("CAJERO #1 REGISTRO: "+"\n");
            for (int i = 0; i < pa1.getLista().size(); i++) {
                
                ta1.append(ca1.getP().getLista().get(i)+"\n");
               
            }
            ta1.removeAll();
        }
        if(rb2.isSelected()){
            ta1.setText("");
            //ta1.setText("CAJERO #1 REGISTRO: "+"\n");
            Cajero ca1=listaca.get(1);
            Pila pa1=ca1.getP();
            //pa1.imprime();
            ta1.append("CAJERO #2 REGISTRO: "+"\n");
            for (int i = 0; i <pa1.getLista().size(); i++) {
                
                ta1.append(ca1.getP().getLista().get(i)+"\n");
                
            }
            ta1.removeAll();
            
        }
        if(rb3.isSelected()){
            ta1.setText("");
            //ta1.setText("CAJERO #1 REGISTRO: "+"\n");
            Cajero ca1=listaca.get(2);
            Pila pa1=ca1.getP();
            //pa1.imprime();
            ta1.append("CAJERO #3 REGISTRO: "+"\n");
            for (int i = 0; i <pa1.getLista().size(); i++) {
                
                ta1.append(ca1.getP().getLista().get(i)+"\n");
                
            }
            
            
        }
         if(rb4.isSelected()){
             ta1.setText("");
            //ta1.setText("CAJERO #1 REGISTRO: "+"\n");
            Cajero ca1=listaca.get(3);
            Pila pa1=ca1.getP();
            //pa1.imprime();
            ta1.append("CAJERO #4 REGISTRO: "+"\n");
            for (int i = 0; i <pa1.getLista().size(); i++) {
                
                ta1.append(ca1.getP().getLista().get(i)+"\n");
                
            }
            
            
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       
        int num=(int)spinner1.getValue();
       
        if(num==1){
            
            c2.setVisible(false);
            c3.setVisible(false);
            c4.setVisible(false);
            t2.setVisible(false);
            t3.setVisible(false);
            t4.setVisible(false);
            per2.setVisible(false);
            per3.setVisible(false);
            per4.setVisible(false);
            jd1.setModal(true); //no poder tocar a principal
            jd1.pack();//tamaño se acople a los controles preestablecidos
            jd1.setLocationRelativeTo(this);//centro de la principal
            jd1.setVisible(true);
            
        }
        if(num==2){
            ppcaj1.setVisible(true);
            ppcaj2.setVisible(true);
            ppcaj3.setVisible(false);
            ppcaj4.setVisible(false);
            pcaj1.setVisible(true);
            pcaj2.setVisible(true);
            pcaj3.setVisible(false);
            pcaj4.setVisible(false);
            bcaj1.setVisible(true);
            bcaj2.setVisible(true);
            bcaj3.setVisible(false);
            bcaj4.setVisible(false);
            caj1.setVisible(true);
            caj2.setVisible(true);
            caj3.setVisible(false);
            caj4.setVisible(false);
            pper1.setVisible(true);
            pper2.setVisible(true);
            pper3.setVisible(false);
            pper4.setVisible(false);
            sper1.setVisible(true);
            sper2.setVisible(true);
            sper3.setVisible(false);
            sper4.setVisible(false);
            cper1.setVisible(true);
            cper2.setVisible(true);
            cper3.setVisible(false);
            cper4.setVisible(false);
            bar1.setVisible(true);
            bar2.setVisible(true);
            bar3.setVisible(false);
            bar4.setVisible(false);
            //
            jd2.setModal(true); //no poder tocar a principal
            jd2.pack();//tamaño se acople a los controles preestablecidos
            jd2.setLocationRelativeTo(this);//centro de la principal
            jd2.setVisible(true);
        }
        if(num==3){
            ppcaj1.setVisible(true);
            ppcaj2.setVisible(true);
            ppcaj3.setVisible(true);
            ppcaj4.setVisible(false);
            pcaj1.setVisible(true);
            pcaj2.setVisible(true);
            pcaj3.setVisible(true);
            pcaj4.setVisible(false);
            bcaj1.setVisible(true);
            bcaj2.setVisible(true);
            bcaj3.setVisible(true);
            bcaj4.setVisible(false);
            caj1.setVisible(true);
            caj2.setVisible(true);
            caj3.setVisible(true);
            caj4.setVisible(false);
            pper1.setVisible(true);
            pper2.setVisible(true);
            pper3.setVisible(true);
            pper4.setVisible(false);
            sper1.setVisible(true);
            sper2.setVisible(true);
            sper3.setVisible(true);
            sper4.setVisible(false);
            cper1.setVisible(true);
            cper2.setVisible(true);
            cper3.setVisible(true);
            cper4.setVisible(false);
            bar1.setVisible(true);
            bar2.setVisible(true);
            bar3.setVisible(true);
            bar4.setVisible(false);
            //
            jd2.setModal(true); //no poder tocar a principal
            jd2.pack();//tamaño se acople a los controles preestablecidos
            jd2.setLocationRelativeTo(this);//centro de la principal
            jd2.setVisible(true);
        }
        //
        if(num==4){
            ppcaj1.setVisible(true);
            ppcaj2.setVisible(true);
            ppcaj3.setVisible(true);
            ppcaj4.setVisible(true);
            pcaj1.setVisible(true);
            pcaj2.setVisible(true);
            pcaj3.setVisible(true);
            pcaj4.setVisible(true);
            bcaj1.setVisible(true);
            bcaj2.setVisible(true);
            bcaj3.setVisible(true);
            bcaj4.setVisible(true);
            caj1.setVisible(true);
            caj2.setVisible(true);
            caj3.setVisible(true);
            caj4.setVisible(true);
            pper1.setVisible(true);
            pper2.setVisible(true);
            pper3.setVisible(true);
            pper4.setVisible(true);
            sper1.setVisible(true);
            sper2.setVisible(true);
            sper3.setVisible(true);
            sper4.setVisible(true);
            cper1.setVisible(true);
            cper2.setVisible(true);
            cper3.setVisible(true);
            cper4.setVisible(true);
            bar1.setVisible(true);
            bar2.setVisible(true);
            bar3.setVisible(true);
            bar4.setVisible(true);
            //
            jd2.setModal(true); //no poder tocar a principal
            jd2.pack();//tamaño se acople a los controles preestablecidos
            jd2.setLocationRelativeTo(this);//centro de la principal
            jd2.setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         int num=(int)spinner1.getValue();
         if(num==2){
             Cola c1=new Cola();
             Cola c2=new Cola();
             Pila p1=new Pila();
             Pila p2=new Pila();
             ArrayList <Persona> listap=new ArrayList();
             for(int i=0;i<68;i++){
                String name="Persona"+i;
                Random r= new Random();
                int t=r.nextInt(3)+1;
                String tra="";
                if(t==1){
                    tra="Retiro";
                }
                if(t==2){
                    tra="Pago";
                }
                if(t==3){
                    tra="Transferencia";
                }
                Persona p=new Persona();
                p.setTransaccion(tra);
                p.setNombre(name);
                listap.add(p);
             }
             for(int i=0;i<listap.size();i++){
                 if(listap.size()!=0){
                    Random r= new Random();
                    int t=r.nextInt(2)+1;
                    if(t==1){
                        c1.Pone(listap.get(i));
                    }else{
                        c2.Pone(listap.get(i));
                    }
                 }
            }
            System.out.println("LISTA 1");
            c1.imprime();
            System.out.println("SIZE: "+c1.getLista().size());
            System.out.println("LISTA 2");
            c2.imprime();
            System.out.println("SIZE: "+c2.getLista().size());
            int conts=0;
            int cont1=68;
            int cont2=68;
            bar1.setMaximum(68);
            bar1.setValue(cont1);
            bar2.setMaximum(68);
            bar2.setValue(cont2);
            while(c1.getLista().size()!=0||c2.getLista().size()!=0){
                Cajero caj1=new Cajero();
                Cajero caj2=new Cajero();
                listaca.add(caj1);
                listaca.add(caj2);
                
                caj1.setP(p1);
                caj2.setP(p2);
                
                caj1.setVacio(true);
                caj2.setVacio(true);
                if(caj1.isVacio()==true&&caj2.isVacio()==true){
                    Random r= new Random();
                    int t=r.nextInt(2)+1;
                    if(t==1){
                        caj1.setVacio(false);
                        if(c1.getLista().size()!=0){
                            caj1.setPersona(c1.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj1.setText(c1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c1.getLista().size()!=0)
                            c1.Quita();
                            String pass=caj1.getPersona().getNombre()+" , Accion: "+caj1.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj1.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c1.getLista().size()>1){
                            pper1.setText(c1.getLista().get(1).getNombre());
                        }
                        cont1--;
                        bar1.setValue(cont1);
                    }
                    //2
                    if(t==2){
                        caj2.setVacio(false);
                        if(c2.getLista().size()!=0){
                            caj2.setPersona(c2.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj2.setText(c2.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c2.getLista().size()!=0)
                            c2.Quita();
                            String pass=caj2.getPersona().getNombre()+" , Accion: "+caj2.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj2.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c2.getLista().size()>1){
                            pper2.setText(c2.getLista().get(1).getNombre());
                        }
                        cont2--;
                        bar2.setValue(cont2);
                    }
                }
                if(caj1.isVacio()==true){
                    caj1.setVacio(false);
                        if(c1.getLista().size()!=0){
                            caj1.setPersona(c1.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj1.setText(c1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c1.getLista().size()!=0)
                            c1.Quita();
                            String pass=caj1.getPersona().getNombre()+" , Accion: "+caj1.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj1.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c1.getLista().size()>1){
                            pper1.setText(c1.getLista().get(1).getNombre());
                        }
                    cont1--;
                    bar1.setValue(cont1);
                }
                if(caj2.isVacio()==true){
                    caj2.setVacio(false);
                        if(c2.getLista().size()!=0){
                            caj2.setPersona(c2.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj2.setText(c2.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c2.getLista().size()!=0)
                            c2.Quita();
                            String pass=caj2.getPersona().getNombre()+" , Accion: "+caj2.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj2.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c2.getLista().size()>1){
                            pper2.setText(c2.getLista().get(1).getNombre());
                        }
                    cont2--;
                    bar2.setValue(cont2);
                }
                
            }
            bar1.setValue(0);
            bar2.setValue(0);
            System.out.println("SIZE COLA 1: "+c1.getLista().size());   
            System.out.println("SIZE COLA 2: "+c2.getLista().size());   
            System.out.println("PILA 1");
            p1.imprime();
             System.out.println("SIZE 1: "+p1.getLista().size());
            System.out.println("PILA 2");
            p2.imprime();
            System.out.println("SIZE 2: "+p2.getLista().size());
            jdr1.setModal(true); //no poder tocar a principal
            jdr1.pack();//tamaño se acople a los controles preestablecidos
            jdr1.setLocationRelativeTo(this);//centro de la principal
            jdr1.setVisible(true);
            listaca.remove(0);
                     
         }//opcion2
         if(num==3){
             Cola c1=new Cola();
             Cola c2=new Cola();
             Cola c3=new Cola();
             Pila p1=new Pila();
             Pila p2=new Pila();
             Pila p3=new Pila();
             ArrayList <Persona> listap=new ArrayList();
             for(int i=0;i<60;i++){
                String name="Persona"+i;
                Random r= new Random();
                int t=r.nextInt(3)+1;
                String tra="";
                if(t==1){
                    tra="Retiro";
                }
                if(t==2){
                    tra="Pago";
                }
                if(t==3){
                    tra="Transferencia";
                }
                Persona p=new Persona();
                p.setTransaccion(tra);
                p.setNombre(name);
                listap.add(p);
             }
             for(int i=0;i<listap.size();i++){
                 if(listap.size()!=0){
                    Random r= new Random();
                    int t=r.nextInt(3)+1;
                    if(t==1){
                        c1.Pone(listap.get(i));
                    }
                    if(t==2){
                        c2.Pone(listap.get(i));
                    }
                    if(t==3){
                        c3.Pone(listap.get(i));
                    }
                 }
            }
            System.out.println("LISTA 1");
            c1.imprime();
            System.out.println("SIZE: "+c1.getLista().size());
            System.out.println("LISTA 2");
            c2.imprime();
            System.out.println("SIZE: "+c2.getLista().size());
            System.out.println("LISTA 3");
            c3.imprime();
            System.out.println("SIZE: "+c3.getLista().size());
            int conts=0;
            int cont1=60;
            int cont2=60;
            int cont3=60;
            bar1.setMaximum(60);
            bar1.setValue(59);
            bar2.setMaximum(60);
            bar2.setValue(59);
            bar3.setMaximum(60);
            bar3.setValue(59);
            while(c1.getLista().size()!=0||c2.getLista().size()!=0||c3.getLista().size()!=0){
                Cajero caj1=new Cajero();
                Cajero caj2=new Cajero();
                Cajero caj3=new Cajero();
                listaca.add(caj1);
                listaca.add(caj2);
                listaca.add(caj3);
                
                caj1.setP(p1);
                caj2.setP(p2);
                caj3.setP(p3);
                
                caj1.setVacio(true);
                caj2.setVacio(true);
                caj3.setVacio(true);
                if(caj1.isVacio()==true&&caj2.isVacio()==true&&caj3.isVacio()==true){
                    Random r= new Random();
                    int t=r.nextInt(3)+1;
                    if(t==1){
                        caj1.setVacio(false);
                        if(c1.getLista().size()!=0){
                            caj1.setPersona(c1.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj1.setText(c1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c1.getLista().size()!=0)
                            c1.Quita();
                            String pass=caj1.getPersona().getNombre()+" , Accion: "+caj1.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj1.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c1.getLista().size()>1){
                            pper1.setText(c1.getLista().get(1).getNombre());
                        }
                        cont1--;
                        bar1.setValue(cont1);
                    }
                    //2
                    if(t==2){
                        caj2.setVacio(false);
                        if(c2.getLista().size()!=0){
                            caj2.setPersona(c2.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj2.setText(c2.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c2.getLista().size()!=0)
                            c2.Quita();
                            String pass=caj2.getPersona().getNombre()+" , Accion: "+caj2.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj2.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c2.getLista().size()>1){
                            pper2.setText(c2.getLista().get(1).getNombre());
                        }
                        cont2--;
                        bar2.setValue(cont2);
                    }//3
                    
                    if(t==3){
                        caj3.setVacio(false);
                        if(c3.getLista().size()!=0){
                            caj3.setPersona(c3.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj3.setText(c3.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c3.getLista().size()!=0)
                            c3.Quita();
                            String pass=caj3.getPersona().getNombre()+" , Accion: "+caj3.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj3.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c3.getLista().size()>1){
                            pper3.setText(c3.getLista().get(1).getNombre());
                        }
                        cont3--;
                        bar3.setValue(cont3);
                    }
                }
                if(caj1.isVacio()==true){
                    caj1.setVacio(false);
                        if(c1.getLista().size()!=0){
                            caj1.setPersona(c1.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj1.setText(c1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c1.getLista().size()!=0)
                            c1.Quita();
                            String pass=caj1.getPersona().getNombre()+" , Accion: "+caj1.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj1.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c1.getLista().size()>1){
                            pper1.setText(c1.getLista().get(1).getNombre());
                        }
                    cont1--;
                    bar1.setValue(cont1);
                }
                if(caj2.isVacio()==true){
                    caj2.setVacio(false);
                        if(c2.getLista().size()!=0){
                            caj2.setPersona(c2.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj2.setText(c2.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c2.getLista().size()!=0)
                            c2.Quita();
                            String pass=caj2.getPersona().getNombre()+" , Accion: "+caj2.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj2.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c2.getLista().size()>1){
                            pper2.setText(c2.getLista().get(1).getNombre());
                        }
                    cont2--;
                    bar2.setValue(cont2);
                }
                if(caj3.isVacio()==true){
                    caj3.setVacio(false);
                        if(c3.getLista().size()!=0){
                            caj3.setPersona(c3.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj3.setText(c3.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c3.getLista().size()!=0)
                            c3.Quita();
                            String pass=caj3.getPersona().getNombre()+" , Accion: "+caj3.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj3.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c3.getLista().size()>1){
                            pper3.setText(c3.getLista().get(1).getNombre());
                        }
                        cont3--;
                        bar3.setValue(cont3);
                }

            }
            bar1.setValue(0);
            bar2.setValue(0);
            bar3.setValue(0);
            System.out.println("SIZE COLA 1: "+c1.getLista().size());   
            System.out.println("SIZE COLA 2: "+c2.getLista().size());  
            System.out.println("SIZE COLA 3: "+c3.getLista().size()); 
            System.out.println("PILA 1");
            p1.imprime();
             System.out.println("SIZE 1: "+p1.getLista().size());
            System.out.println("PILA 2");
            p2.imprime();
            System.out.println("SIZE 2: "+p2.getLista().size());
            System.out.println("PILA 3");
            p3.imprime();
            System.out.println("SIZE 3: "+p3.getLista().size());
            jdr1.setModal(true); //no poder tocar a principal
            jdr1.pack();//tamaño se acople a los controles preestablecidos
            jdr1.setLocationRelativeTo(this);//centro de la principal
            jdr1.setVisible(true);
            listaca.remove(0);
                
         }//4
         if(num==4){
             Cola c1=new Cola();
             Cola c2=new Cola();
             Cola c3=new Cola();
             Cola c4=new Cola();
             Pila p1=new Pila();
             Pila p2=new Pila();
             Pila p3=new Pila();
             Pila p4=new Pila();
             ArrayList <Persona> listap=new ArrayList();
             for(int i=0;i<60;i++){
                String name="Persona"+i;
                Random r= new Random();
                int t=r.nextInt(3)+1;
                String tra="";
                if(t==1){
                    tra="Retiro";
                }
                if(t==2){
                    tra="Pago";
                }
                if(t==3){
                    tra="Transferencia";
                }
                Persona p=new Persona();
                p.setTransaccion(tra);
                p.setNombre(name);
                listap.add(p);
             }
             for(int i=0;i<listap.size();i++){
                 if(listap.size()!=0){
                    Random r= new Random();
                    int t=r.nextInt(4)+1;
                    if(t==1){
                        c1.Pone(listap.get(i));
                    }
                    if(t==2){
                        c2.Pone(listap.get(i));
                    }
                    if(t==3){
                        c3.Pone(listap.get(i));
                    }
                    if(t==4){
                        c4.Pone(listap.get(i));
                    }
                 }
            }
            System.out.println("LISTA 1");
            c1.imprime();
            System.out.println("SIZE: "+c1.getLista().size());
            System.out.println("LISTA 2");
            c2.imprime();
            System.out.println("SIZE: "+c2.getLista().size());
            System.out.println("LISTA 3");
            c3.imprime();
            System.out.println("SIZE: "+c3.getLista().size());
            System.out.println("LISTA 4");
            c4.imprime();
            System.out.println("SIZE: "+c4.getLista().size());
            int conts=0;
            int cont1=60;
            int cont2=60;
            int cont3=60;
            int cont4=60;
            bar1.setMaximum(60);
            bar1.setValue(59);
            bar2.setMaximum(60);
            bar2.setValue(59);
            bar3.setMaximum(60);
            bar3.setValue(59);
            bar4.setMaximum(60);
            bar4.setValue(59);
            while(c1.getLista().size()!=0||c2.getLista().size()!=0||c3.getLista().size()!=0||c4.getLista().size()!=0){
                Cajero caj1=new Cajero();
                Cajero caj2=new Cajero();
                Cajero caj3=new Cajero();
                Cajero caj4=new Cajero();
                listaca.add(caj1);
                listaca.add(caj2);
                listaca.add(caj3);
                listaca.add(caj4);
                
                caj1.setP(p1);
                caj2.setP(p2);
                caj3.setP(p3);
                caj4.setP(p4);
                
                caj1.setVacio(true);
                caj2.setVacio(true);
                caj3.setVacio(true);
                caj4.setVacio(true);
                if(caj1.isVacio()==true&&caj2.isVacio()==true&&caj3.isVacio()==true&&caj4.isVacio()==true){
                    Random r= new Random();
                    int t=r.nextInt(4)+1;
                    if(t==1){
                        caj1.setVacio(false);
                        if(c1.getLista().size()!=0){
                            caj1.setPersona(c1.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj1.setText(c1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c1.getLista().size()!=0)
                            c1.Quita();
                            String pass=caj1.getPersona().getNombre()+" , Accion: "+caj1.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj1.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c1.getLista().size()>1){
                            pper1.setText(c1.getLista().get(1).getNombre());
                        }
                        cont1--;
                        bar1.setValue(cont1);
                    }
                    //2
                    if(t==2){
                        caj2.setVacio(false);
                        if(c2.getLista().size()!=0){
                            caj2.setPersona(c2.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj2.setText(c2.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c2.getLista().size()!=0)
                            c2.Quita();
                            String pass=caj2.getPersona().getNombre()+" , Accion: "+caj2.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj2.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c2.getLista().size()>1){
                            pper2.setText(c2.getLista().get(1).getNombre());
                        }
                        cont2--;
                        bar2.setValue(cont2);
                    }//3
                    
                    if(t==3){
                        caj3.setVacio(false);
                        if(c3.getLista().size()!=0){
                            caj3.setPersona(c3.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj3.setText(c3.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c3.getLista().size()!=0)
                            c3.Quita();
                            String pass=caj3.getPersona().getNombre()+" , Accion: "+caj3.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj3.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c3.getLista().size()>1){
                            pper3.setText(c3.getLista().get(1).getNombre());
                        }
                        cont3--;
                        bar3.setValue(cont3);
                    }
                    if(t==4){
                        caj4.setVacio(false);
                        if(c4.getLista().size()!=0){
                            caj4.setPersona(c4.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj4.setText(c4.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c4.getLista().size()!=0)
                            c4.Quita();
                            String pass=caj4.getPersona().getNombre()+" , Accion: "+caj4.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj4.setTipo(pass+"\n");
                            p4.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj4.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c4.getLista().size()>1){
                            pper4.setText(c4.getLista().get(1).getNombre());
                        }
                        cont4--;
                        bar4.setValue(cont4);
                        
                    }
                }
                if(caj1.isVacio()==true){
                    caj1.setVacio(false);
                        if(c1.getLista().size()!=0){
                            caj1.setPersona(c1.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj1.setText(c1.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c1.getLista().size()!=0)
                            c1.Quita();
                            String pass=caj1.getPersona().getNombre()+" , Accion: "+caj1.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj1.setTipo(pass+"\n");
                            p1.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj1.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c1.getLista().size()>1){
                            pper1.setText(c1.getLista().get(1).getNombre());
                        }
                    cont1--;
                    bar1.setValue(cont1);
                }
                if(caj2.isVacio()==true){
                    caj2.setVacio(false);
                        if(c2.getLista().size()!=0){
                            caj2.setPersona(c2.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj2.setText(c2.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c2.getLista().size()!=0)
                            c2.Quita();
                            String pass=caj2.getPersona().getNombre()+" , Accion: "+caj2.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj2.setTipo(pass+"\n");
                            p2.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj2.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c2.getLista().size()>1){
                            pper2.setText(c2.getLista().get(1).getNombre());
                        }
                    cont2--;
                    bar2.setValue(cont2);
                }
                if(caj3.isVacio()==true){
                    caj3.setVacio(false);
                        if(c3.getLista().size()!=0){
                            caj3.setPersona(c3.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj3.setText(c3.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c3.getLista().size()!=0)
                            c3.Quita();
                            String pass=caj3.getPersona().getNombre()+" , Accion: "+caj3.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj3.setTipo(pass+"\n");
                            p3.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj3.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c3.getLista().size()>1){
                            pper3.setText(c3.getLista().get(1).getNombre());
                        }
                        cont3--;
                        bar3.setValue(cont3);
                }
                if(caj4.isVacio()==true){
                    caj4.setVacio(false);
                        if(c4.getLista().size()!=0){
                            caj4.setPersona(c4.getLista().get(0));
                            Random r2= new Random();
                            int rr2=r2.nextInt(3)+1;
                            conts+=rr2;
                            jseconds2.setText(conts+"");
                            ppcaj4.setText(c4.getLista().get(0).getNombre());
                            try {
                                Thread.sleep(rr2+1000);
                            } catch (InterruptedException ex) {
                                //Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            //cc--;
                            if(c4.getLista().size()!=0)
                            c4.Quita();
                            String pass=caj4.getPersona().getNombre()+" , Accion: "+caj4.getPersona().getTransaccion()+" Tardanza: "+rr2;
                            caj4.setTipo(pass+"\n");
                            p4.Mete(pass);//meto a la pila

                            JOptionPane.showMessageDialog(jd2, "CAJERO VACIO SIGUIENTE PERSONA");
                            caj4.setVacio(true);
                            
                            //System.out.println("Control : "+cc);
                           
                            
                            //colapersona.setText(cola1.getLista().get(0).getNombre());
                            
                            
                        }
                        if(c4.getLista().size()>1){
                            pper4.setText(c4.getLista().get(1).getNombre());
                        }
                        cont4--;
                        bar4.setValue(cont4);
                }

            }
            bar1.setValue(0);
            bar2.setValue(0);
            bar3.setValue(0);
            bar4.setValue(0);
            System.out.println("SIZE COLA 1: "+c1.getLista().size());   
            System.out.println("SIZE COLA 2: "+c2.getLista().size());  
            System.out.println("SIZE COLA 3: "+c3.getLista().size()); 
            System.out.println("SIZE COLA 4: "+c4.getLista().size());
            System.out.println("PILA 1");
            p1.imprime();
             System.out.println("SIZE 1: "+p1.getLista().size());
            System.out.println("PILA 2");
            p2.imprime();
            System.out.println("SIZE 2: "+p2.getLista().size());
            System.out.println("PILA 3");
            p3.imprime();
            System.out.println("SIZE 3: "+p3.getLista().size());
            System.out.println("PILA 4");
            p4.imprime();
            System.out.println("SIZE 4: "+p4.getLista().size());
            jdr1.setModal(true); //no poder tocar a principal
            jdr1.pack();//tamaño se acople a los controles preestablecidos
            jdr1.setLocationRelativeTo(this);//centro de la principal
            jdr1.setVisible(true);
            listaca.remove(0);
                
         }
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar bar1;
    private javax.swing.JProgressBar bar2;
    private javax.swing.JProgressBar bar3;
    private javax.swing.JProgressBar bar4;
    private javax.swing.JButton bcaj1;
    private javax.swing.JButton bcaj2;
    private javax.swing.JButton bcaj3;
    private javax.swing.JButton bcaj4;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton c1;
    private javax.swing.JButton c2;
    private javax.swing.JButton c3;
    private javax.swing.JButton c4;
    private javax.swing.JLabel caj1;
    private javax.swing.JLabel caj2;
    private javax.swing.JLabel caj3;
    private javax.swing.JLabel caj4;
    private javax.swing.JLabel colapersona;
    private javax.swing.JButton cper1;
    private javax.swing.JButton cper2;
    private javax.swing.JButton cper3;
    private javax.swing.JButton cper4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog jd1;
    private javax.swing.JDialog jd2;
    private javax.swing.JDialog jdr1;
    private javax.swing.JLabel jseconds;
    private javax.swing.JLabel jseconds2;
    private javax.swing.JProgressBar pb1;
    private javax.swing.JLabel pcaj1;
    private javax.swing.JLabel pcaj2;
    private javax.swing.JLabel pcaj3;
    private javax.swing.JLabel pcaj4;
    private javax.swing.JLabel per1;
    private javax.swing.JLabel per2;
    private javax.swing.JLabel per3;
    private javax.swing.JLabel per4;
    private javax.swing.JLabel ppcaj1;
    private javax.swing.JLabel ppcaj2;
    private javax.swing.JLabel ppcaj3;
    private javax.swing.JLabel ppcaj4;
    private javax.swing.JLabel pper1;
    private javax.swing.JLabel pper2;
    private javax.swing.JLabel pper3;
    private javax.swing.JLabel pper4;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JRadioButton rb3;
    private javax.swing.JRadioButton rb4;
    private javax.swing.JLabel sper1;
    private javax.swing.JLabel sper2;
    private javax.swing.JLabel sper3;
    private javax.swing.JLabel sper4;
    private javax.swing.JSpinner spinner1;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel t2;
    private javax.swing.JLabel t3;
    private javax.swing.JLabel t4;
    private javax.swing.JTextArea ta1;
    // End of variables declaration//GEN-END:variables
     ArrayList<Cajero> listaca = new ArrayList();
}
